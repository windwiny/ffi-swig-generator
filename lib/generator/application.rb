require 'getoptlong'

module FFI
  module Generator
    class Application
      OPTIONS =  [
                  [ "--help", "-u", GetoptLong::NO_ARGUMENT,
                    "Display help information." ],
                  [ "--version", "-v", GetoptLong::NO_ARGUMENT,
                    "Display the version number and quit." ],
                 ]

      USAGE_PREAMBLE = <<-EOU
Usage: ffi-gen [options] <input_file> <output_file>

<input_file> is the xml parse tree generated by swig -xml command.
<output_file> is the ruby-ffi wrapper file.

EOU
      class << self
        def run      
          process_args
          if ARGV.size == 2
            File.open(ARGV[1], 'w') do |file|
              file << FFI::Generator::Parser.new.generate(Nokogiri::XML(File.open(ARGV[0])) do |cfg| cfg.noblanks end)
            end
          else
            help
            raise "Invalid number of arguments!"
          end
        end
        private
        def do_option(option, value = nil)
          case option
          when '--help'
            help
            exit
          when '--version'
            puts "ffi-swig-generator, version #{Generator::VERSION}\n"
            exit
          end
        end
        def command_line_options
          OPTIONS.collect { |lst| lst[0..-2] }
        end
        def process_args
          opts = GetoptLong.new(*command_line_options)
          opts.each { |opt, value| do_option(opt, value) }
        end
        def help
          puts
          puts USAGE_PREAMBLE
          puts "Recognized options are:"
          puts
          OPTIONS.sort.each do |long, short, mode, desc|
            if mode == GetoptLong::REQUIRED_ARGUMENT
              if desc =~ /\b([A-Z]{2,})\b/
                long = long + "=#{$1}"
              end
            end
            printf "  %-20s (%s)\n", long, short
            printf "      %s\n", desc
            puts
          end
        end
      end
    end
  end
end
